.\" Automatically generated by Pod::Man 2.22 (Pod::Simple 3.07)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MAN 1"
.TH MAN 1 "2011-10-01" "perl v5.10.1" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
jSQLsh \- Jim Tcl SQLite Shell
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
jsqlsh [Options] [\-\-] <Database File>
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
jSQLsh is an SQLite shell based on the PostgreSQL command line shell.
Implemented using the Jim Tcl interpreter. It is intended to be a simple light
weight SQLite shell. The ReadLine library in Jim Tcl is used to provide line
editing and history. History persists in the file \fI~/.jsqlsh_history\fR/
.PP
jSQLsh is not compatible with the sqlite3 command line client. It does not
recognize any of the sqlite3 \fI.\fR commands. In fact by default jSQLsh does not
execute \s-1SQL\s0, even with an ending \fI;\fR. You have to tell jSQLsh when to execute
the contents of the query buffer, or turn on \fBauto\fR mode. I tried to make
configuration easy via the \fB/set\fR command.
.PP
There are things about the SQLite command shell that annoy me. Since I could
not find any easily modified, decent, command line \s-1SQL\s0 clients, so I wrote my
own. This is also my first foray in \s-1TCL\s0 programming.
.SH "OPTIONS"
.IX Header "OPTIONS"
.IP "\fB\-a\fR" 12
.IX Item "-a"
Enable execution of queries ending with ';'. (auto setting)
.IP "\fB\-c\fR" 12
.IX Item "-c"
Create the database file. Fails if the file exists. Normally jSQLsh will not
open a database file that does not exist yet.
.IP "\fB\-d\fR" 12
.IX Item "-d"
Disable slash commands and enable auto execution. Makes jsqlsh act like a dumb
\&\s-1SQL\s0 evaluator.
.IP "\fB\-D\fR" 12
.IX Item "-D"
Debug mode. (Copious output!)
.IP "\fB\-h\fR" 12
.IX Item "-h"
Display the help text.
.IP "\fB\-q\fR" 12
.IX Item "-q"
Set quiet mode.
.IP "\fB\-s'opt=val'\fR" 12
.IX Item "-s'opt=val'"
Set an option as in the '/s' command.
.IP "\fB\-\-\fR" 12
.IX Item "--"
Stops processing command line options. The next option is used as the database
file to open.
.SH "PROMPT"
.IX Header "PROMPT"
The prompt displays several bits of useful information. A typical prompt
resembles \fB\s-1DB\s0.db (0 rows, 0 changes) #\fR. The database name, number of rows
returned from the last query, the number of rows changed by the last query and
the prompt setting. When debugging is enabled the prompt will also have
\&\fB\s-1DEBUG\s0\fR as a reminder.
.SH "COMMANDS"
.IX Header "COMMANDS"
jSQLsh has several commands for interactive use. These are patterned after the
psql commands. All commands start with a forward slash \*(L"/\*(R". The parts in
parens \*(L"()\*(R" are optional.
.IP "\fB/A(\s-1UTO\s0)\fR" 12
.IX Item "/A(UTO)"
Toggle the auto option state.
.IP "\fB/c(lear)\fR" 12
.IX Item "/c(lear)"
Clear the query buffer
.IP "\fB/D(\s-1EBUG\s0)\fR" 12
.IX Item "/D(EBUG)"
Toggle the debug option state.
.IP "\fB/d\fR" 12
.IX Item "/d"
Display all objects in the database.
.IP "\fB/d\e[itv\e]\fR" 12
.IX Item "/d[itv]"
Display all indexes (/di) / tables (/dt) / views (/dv).
.IP "\fB/d \s-1OBJ\s0\fR" 12
.IX Item "/d OBJ"
Describe the object \s-1OBJ\s0.
.IP "\fB/ds \s-1OBJ\s0\fR" 12
.IX Item "/ds OBJ"
Displays the schema for the object \s-1OBJ\s0.
.IP "\fB/e(dit)\fR" 12
.IX Item "/e(dit)"
Edit the query buffer. This uses the editor defined in \fI\f(CI$EDITOR\fI\fR or \fIvi\fR.
.IP "\fB/go\fR or \fB/\fR" 12
.IX Item "/go or /"
Execute the query in the query buffer..
.IP "\fB/h(elp)\fR" 12
.IX Item "/h(elp)"
Print this help text.
.IP "\fB/o(pen)\fR" 12
.IX Item "/o(pen)"
Open a database file, change directories and list files. \fI/o\fR alone lists
files in the current directory. \fI/o \s-1DIR\s0\fR changes to the directory \fI\s-1DIR\s0\fR.
.IP "\fB/P(\s-1AGER\s0)\fR" 12
.IX Item "/P(AGER)"
Toggle the page option state. This uses the pager defined in \fI\f(CI$PAGER\fI\fR or
\&\fImore\fR/
.IP "\fB/p(rint)\fR" 12
.IX Item "/p(rint)"
Print the query buffer.
.IP "\fB/s(et)\fR" 12
.IX Item "/s(et)"
Set/List configuration options. The format to set options is \fI/s \s-1OPTION\s0
\&\s-1VALUE\s0\fR. Values are treated as \s-1TCL\s0 strings and can be quoted.
.IP "\fB/Q(\s-1UIET\s0)\fR" 12
.IX Item "/Q(UIET)"
Toggle the quiet option state.
.IP "\fB/q(uit)\fR" 12
.IX Item "/q(uit)"
Quit  (Also Ctrl-D)
.IP "\fB/u(ser)\fR" 12
.IX Item "/u(ser)"
Display the user macros.
.IP "\fB/u(ser)#\fR" 12
.IX Item "/u(ser)#"
Copy user macro # into the query buffer. Replacing the current query buffer
contents.
.IP "\fB/u(ser)# \-\fR" 12
.IX Item "/u(ser)# -"
Copy the query buffer, or supplied text, into macro #.
.SH "SETTINGS"
.IX Header "SETTINGS"
Settings are changed with the \fB/s\fR command as noted above. Each setting is
either a text or boolean value.
.PP
The values \fI1\fR, \fItrue\fR, \fIyes\fR &, \fIon\fR count as true boolean values.
Anything is considered false. Boolean settings are indicated by the text
\&\fIBool\fR after their description.
.IP "\fBauto\fR" 12
.IX Item "auto"
Automatically execute \s-1SQL\s0 ending with ';'. Defaults to off. \fIBool\fR
.IP "\fBdebug\fR" 12
.IX Item "debug"
Controls debugging mode. (Very Verbose!) Defaults to off. \fIBool\fR
.IP "\fBeditor\fR" 12
.IX Item "editor"
The editor program for editing queries. Defaults to either \fI\f(CI$EDITOR\fI\fR or \fIvi\fR. \fIText\fR
.IP "\fBext\fR" 12
.IX Item "ext"
SQLite file extension. Defaults to \fI.db\fR. \fIText\fR
.IP "\fBescape\fR" 12
.IX Item "escape"
The escape character for \s-1CSV\s0 mode. Defaults to \fI\e\e\fR. \fIText\fR
.IP "\fBheader\fR" 12
.IX Item "header"
If table headers should be printed. Defaults to on. \fIBool\fR
.IP "\fBnull\fR" 12
.IX Item "null"
The value that represents \s-1SQL\s0 \s-1NULL\s0. Defaults to \fI\s-1NULL\s0\fR. \fIText\fR
.IP "\fBpage\fR" 12
.IX Item "page"
Use the 'pager' program for long results. Defaults to on. \fIBool\fR
.IP "\fBpager\fR" 12
.IX Item "pager"
The pager program for long results. Defaults to either \fI\f(CI$PAGER\fI\fR or \fImore\fR. \fIText\fR
.IP "\fBps1\fR" 12
.IX Item "ps1"
Main prompt. Defaults to  \fI#\fR. \fIText\fR
.IP "\fBps2\fR" 12
.IX Item "ps2"
More prompt. Defaults to \fI?\fR. \fIText\fR
.IP "\fBquiet\fR" 12
.IX Item "quiet"
Disables informational messages. Defaults to off. \fIBool\fR
.IP "\fBquote\fR" 12
.IX Item "quote"
The quote character for \s-1CSV\s0 mode. Defaults to \fI"\fR. \fIText\fR
.IP "\fBsep\fR" 12
.IX Item "sep"
Field separator for \s-1CSV\s0 & List modes. Defaults to \fI,\fR. \fIText\fR
.IP "\fBtrunc\fR" 12
.IX Item "trunc"
Truncate long rows to fit the screen. Defaults to off. \fIBool\fR
.SH "CONFIGURATION"
.IX Header "CONFIGURATION"
During startup, before command line options are processed, the configuration
file \fB~/.jsqlshrc\fR is read. This file can contain any commands as noted
above. Comments denoted by \fB#\fR and whitespace are ignored. \s-1SQL\s0 queries will
not work.
.SH "PORTABILITY"
.IX Header "PORTABILITY"
jSQLsh should work with any recent version of Jim Tcl (7 and later should be
good). Jim needs to be compiled with at least the modules \fBreadline\fR and
\&\fBsqlite3\fR. Thus far testing has only been performed under Cygwin and Debian
Linux \*(L"Squeeze\*(R".
.PP
<http://jim.berlios.de/>
.SH "INSTALLATION"
.IX Header "INSTALLATION"
Either copy \fIjsqlsh\fR where you want it or run \fImake install\fR. The makefile
will copy jsqlsh and the manual page to \fI/usr/local/\fR. Edit the makefile to
choose a different location.
.SH "HOME"
.IX Header "HOME"
<https://github.com/LStinson/jSQLsh>
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
These files are in the public domain.
.SH "AUTHOR"
.IX Header "AUTHOR"
Written by Lorance Stinson \s-1AT\s0 Gmail....
.PP
I welcome any input.
